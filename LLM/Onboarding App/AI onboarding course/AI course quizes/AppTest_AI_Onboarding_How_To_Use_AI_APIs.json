{
  "name": "AppTest AI Onboarding How To Use AI APIs",
  "nodes": [
    {
      "parameters": {
        "path": "onboarding/ai/tests/HowToUseAIAPIs",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "847cd945-358d-4b80-8a5e-ad0888dc6364",
      "name": "Webhook",
      "webhookId": "c888b118-55ef-4d19-b738-71470c9aa8ae"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\">\n  <title>How to use AI APIs</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --deep-blue: #081E2F;\n      --primary-yellow: #FCB305;\n      --red: #D32F2F;\n      --red-hover: #C62828;\n      --green: #2E7D32;\n      --green-hover: #1B5E20;\n      --blue: #197502;\n      --blue-dark: #1555C0;\n      --blue-light: #4245F5;\n    }\n    body {\n      font-family: 'Open Sans', sans-serif;\n      background: #F8F9FA;\n      padding: 2rem;\n      max-width: 800px;\n      margin: 0 auto;\n      min-height: 100vh;\n    }\n    #titlePage {\n      text-align: center;\n      padding: 3rem 1rem;\n    }\n    #titlePage h1 {\n      font-size: 32px;\n      color: var(--deep-blue);\n      margin-bottom: 1.5rem;\n    }\n    .quiz-info {\n      background: white;\n      padding: 2rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(8, 30, 47, 0.1);\n      margin: 2rem auto;\n      max-width: 500px;\n    }\n    .info-item {\n      font-size: 16px;\n      color: #4A4A4A;\n      margin: 1rem 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    #timer {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--green);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-weight: 600;\n      box-shadow: 0 2px 6px rgba(46, 125, 50, 0.2);\n    }\n    .hidden {\n      display: none;\n    }\n    .question {\n      background: white;\n      border-radius: 8px;\n      padding: 1.5rem;\n      margin-bottom: 1.5rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n      transition: all 0.3s ease;\n    }\n    .question h3 {\n      font-size: 16px;\n      font-weight: 600;\n      color: var(--deep-blue);\n      margin: 0 0 1rem 0;\n    }\n    label {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.75rem;\n      border-radius: 4px;\n      font-size: 14px;\n      color: #4A4A4A;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    label:hover {\n      background: rgba(25, 118, 210, 0.04);\n    }\n    /* Radio buttons (single-answer) */\n    input[type=\"radio\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n    }\n    /* Checkboxes (multi-answer) */\n    input[type=\"checkbox\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n    }\n    input[type=\"text\"],\n    input[type=\"number\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    /* Replace read-only profession input with dropdown */\n    select[name=\"profession\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      width: 100%;\n      box-sizing: border-box;\n      background: #fff;\n      color: #4A4A4A;\n    }\n    button {\n      background: var(--green);\n      color: white;\n      border: none;\n      padding: 12px 24px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 15px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      display: block;\n      margin: 2rem auto 0;\n      letter-spacing: 0.5px;\n    }\n    button:hover {\n      background: var(--green-hover);\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(46, 125, 50, 0.3);\n    }\n    #result {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      text-align: center;\n      margin-top: 2rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n    }\n    .correct {\n      border-left: 4px solid var(--green);\n      background: #F0F9FF;\n    }\n    .incorrect {\n      border-left: 4px solid var(--red);\n    }\n    .correct-answer {\n      background: #E8F5E9 !important;\n      border: 1px solid var(--green);\n      border-radius: 4px;\n      padding: 2px 4px;\n      margin-top: 0.5rem;\n      display: inline-block;\n    }\n    @media (max-width: 600px) {\n      body {\n        padding: 1rem;\n      }\n      .question {\n        padding: 1rem;\n      }\n      button {\n        width: 100%;\n        padding: 14px 20px;\n      }\n      #timer {\n        top: 10px;\n        right: 10px;\n        font-size: 14px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Title Page -->\n  <div id=\"titlePage\">\n    <h1>How to use AI APIs</h1>\n    <div class=\"quiz-info\">\n      <div class=\"info-item\">\n        <span>Questions:</span>\n        <strong>15</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Time Limit:</span>\n        <strong>5 minutes</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Passing Score:</span>\n        <strong>80%</strong>\n      </div>\n      <button id=\"startExamBtn\" onclick=\"startQuiz()\">Start Exam</button>\n    </div>\n  </div>\n\n  <!-- Quiz Container -->\n  <div id=\"quizContainer\" class=\"hidden\">\n    <div id=\"timer\">00:00</div>\n    <h1>How to use AI APIs</h1>\n    <form id=\"examForm\">\n      <!-- User Data Block (not scored) -->\n      <div class=\"question\" data-points=\"0\">\n        <h3>Enter Your Information</h3>\n        <label>\n          Your Name:\n          <input type=\"text\" name=\"fullName\" placeholder=\"e.g., John Doe\">\n        </label>\n        <label>\n          Your Profession:\n          <select name=\"profession\">\n            <option value=\"3d designer\">3d designer</option>\n            <option value=\"account manager\">account manager</option>\n            <option value=\"affiliate manager\">affiliate manager</option>\n            <option value=\"analyst\">analyst</option>\n            <option value=\"animator\">animator</option>\n            <option value=\"back end developer\">back end developer</option>\n            <option value=\"chat operator\">chat operator</option>\n            <option value=\"content manager\">content manager</option>\n            <option value=\"copywriter\">copywriter</option>\n            <option value=\"email marketer\">email marketer</option>\n            <option value=\"event manager\">event manager</option>\n            <option value=\"financial manager\">financial manager</option>\n            <option value=\"front end developer\">front end developer</option>\n            <option value=\"full stack developer\">full stack developer</option>\n            <option value=\"graphic designer\">graphic designer</option>\n            <option value=\"hr manager\">hr manager</option>\n            <option value=\"illustrator\">illustrator</option>\n            <option value=\"influencer manager\">influencer manager</option>\n            <option value=\"interior designer\">interior designer</option>\n            <option value=\"investment manager\">investment manager</option>\n            <option value=\"lead generator\">lead generator</option>\n            <option value=\"linkbuilder\">linkbuilder</option>\n            <option value=\"media buyer\">media buyer</option>\n            <option value=\"mobile developer\">mobile developer</option>\n            <option value=\"mobile video editor\">mobile video editor</option>\n            <option value=\"motion designer\">motion designer</option>\n            <option value=\"personal assistant\">personal assistant</option>\n            <option value=\"ppc specialist\">ppc specialist</option>\n            <option value=\"pr manager\">pr manager</option>\n            <option value=\"project manager\">project manager</option>\n            <option value=\"proofreader\">proofreader</option>\n            <option value=\"qa\">qa</option>\n            <option value=\"recruiter\">recruiter</option>\n            <option value=\"sales manager\">sales manager</option>\n            <option value=\"seo manager\">seo manager</option>\n            <option value=\"social media manager\">social media manager</option>\n            <option value=\"system administrator\">system administrator</option>\n            <option value=\"targetologist\">targetologist</option>\n            <option value=\"tourism manager\">tourism manager</option>\n            <option value=\"ui/ux designer\">ui/ux designer</option>\n            <option value=\"video editor\">video editor</option>\n            <option value=\"web designer\">web designer</option>\n            <option value=\"wordpress designer\">wordpress designer</option>\n          </select>\n        </label>\n        <label>\n          Your Recruiter:\n          <select name=\"recruiter\">\n            <option value=\"Anastasia Fadeeva\">Anastasia Fadeeva</option>\n            <option value=\"Elena Ermakova\">Elena Ermakova</option>\n            <option value=\"Anna Aleksandrova\">Anna Aleksandrova</option>\n            <option value=\"Sabina Gasanova\">Sabina Gasanova</option>\n          </select>\n        </label>\n      </div>\n\n      <!-- New Quiz Questions -->\n\n      <!-- Question 1 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>1. What is the main purpose of an AI API?</h3>\n        <label><input type=\"radio\" name=\"q1\" value=\"A\"> A) To replace human programmers</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"B\" data-correct=\"true\"> B) To allow applications to access AI-generated content and services</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"C\"> C) To store and process large datasets</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"D\"> D) To manually write AI-generated text</label>\n      </div>\n\n      <!-- Question 2 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>2. Which HTTP method is commonly used to request AI-generated content from an API?</h3>\n        <label><input type=\"radio\" name=\"q2\" value=\"A\" data-correct=\"true\"> A) POST</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"B\"> B) GET</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"C\"> C) DELETE</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"D\"> D) PATCH</label>\n      </div>\n\n      <!-- Question 3 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>3. What is required to authenticate requests when using an AI API?</h3>\n        <label><input type=\"radio\" name=\"q3\" value=\"A\"> A) A username and password</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"B\" data-correct=\"true\"> B) An API key</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"C\"> C) A database connection</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"D\"> D) A CAPTCHA verification</label>\n      </div>\n\n      <!-- Question 4 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>4. Which of the following is a real-world example of fetching AI-generated content using an API?</h3>\n        <label><input type=\"radio\" name=\"q4\" value=\"A\" data-correct=\"true\"> A) A chatbot retrieving responses from OpenAI's GPT API</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"B\"> B) A spreadsheet performing manual calculations</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"C\"> C) A user typing text into a word processor</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"D\"> D) A local application running offline</label>\n      </div>\n\n      <!-- Question 5 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>5. What format do most AI APIs return data in?</h3>\n        <label><input type=\"radio\" name=\"q5\" value=\"A\"> A) XML</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"B\" data-correct=\"true\"> B) JSON</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"C\"> C) CSV</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"D\"> D) TXT</label>\n      </div>\n\n      <!-- Question 6 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>6. Which AI API is used for generating text-based content?</h3>\n        <label><input type=\"radio\" name=\"q6\" value=\"A\"> A) DALL·E API</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"B\" data-correct=\"true\"> B) OpenAI API</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"C\"> C) Stable Diffusion API</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"D\"> D) Google Maps API</label>\n      </div>\n\n      <!-- Question 7 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>7. How do rate limits affect API usage?</h3>\n        <label><input type=\"radio\" name=\"q7\" value=\"A\" data-correct=\"true\"> A) They restrict the number of requests a user can make within a specific timeframe</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"B\"> B) They increase the speed of AI-generated responses</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"C\"> C) They prevent users from accessing the API</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"D\"> D) They allow unlimited API calls without restrictions</label>\n      </div>\n\n      <!-- Question 8 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>8. What is the benefit of integrating AI APIs with automation tools?</h3>\n        <label><input type=\"radio\" name=\"q8\" value=\"A\" data-correct=\"true\"> A) It allows AI to be used in automated workflows without manual intervention</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"B\"> B) It makes API usage more complicated</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"C\"> C) It removes the need for authentication</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"D\"> D) It slows down business processes</label>\n      </div>\n\n      <!-- Question 9 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>9. Which of the following tools is used for automating workflows with AI APIs?</h3>\n        <label><input type=\"radio\" name=\"q9\" value=\"A\"> A) Photoshop</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"B\" data-correct=\"true\"> B) Zapier</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"C\"> C) Excel</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"D\"> D) Notepad</label>\n      </div>\n\n      <!-- Question 10 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>10. What does Make.com allow users to do with AI APIs?</h3>\n        <label><input type=\"radio\" name=\"q10\" value=\"A\"> A) Store AI-generated content in offline files</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"B\" data-correct=\"true\"> B) Connect AI-generated responses to automated workflows</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"C\"> C) Replace AI APIs with manual programming</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"D\"> D) Generate AI-based graphics</label>\n      </div>\n\n      <!-- Question 11 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>11. What is the role of n8n in AI API automation?</h3>\n        <label><input type=\"radio\" name=\"q11\" value=\"A\" data-correct=\"true\"> A) It provides a no-code environment to connect AI APIs with various services</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"B\"> B) It is an AI model for generating text</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"C\"> C) It is a chatbot API</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"D\"> D) It only works for machine learning training</label>\n      </div>\n\n      <!-- Question 12 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>12. How can AI APIs be used in an automated customer support system?</h3>\n        <label><input type=\"radio\" name=\"q12\" value=\"A\"> A) By manually responding to each query</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"B\" data-correct=\"true\"> B) By connecting AI chat models to automation tools like Zapier</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"C\"> C) By using spreadsheets to store customer requests</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"D\"> D) By manually copying AI-generated responses</label>\n      </div>\n\n      <!-- Question 13 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>13. Which automation tool provides the most flexibility for developers to build custom AI workflows?</h3>\n        <label><input type=\"radio\" name=\"q13\" value=\"A\"> A) Zapier</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"B\" data-correct=\"true\"> B) n8n</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"C\"> C) Microsoft Word</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"D\"> D) Canva</label>\n      </div>\n\n      <!-- Question 14 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>14. Which type of AI API integration would be useful for an e-commerce website?</h3>\n        <label><input type=\"radio\" name=\"q14\" value=\"A\" data-correct=\"true\"> A) AI-powered product recommendations automated through Make.com</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"B\"> B) Manually entering product descriptions</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"C\"> C) Using AI for offline advertising</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"D\"> D) Sending newsletters without AI automation</label>\n      </div>\n\n      <!-- Question 15 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>15. Why is API automation important for AI applications?</h3>\n        <label><input type=\"radio\" name=\"q15\" value=\"A\"> A) It replaces all human workers</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"B\" data-correct=\"true\"> B) It streamlines workflows and reduces manual effort</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"C\"> C) It makes AI models slower</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"D\"> D) It prevents integration with other software</label>\n      </div>\n\n      <button id=\"submitBtn\" type=\"button\" onclick=\"calculateScore()\">Submit Exam</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    // Fisher–Yates shuffle function\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n\n    // Randomize answer labels (excluding the user data block)\n    function randomizeAnswers() {\n      const questions = document.querySelectorAll('.question[data-points]:not([data-points=\"0\"])');\n      questions.forEach(question => {\n        const labels = Array.from(question.querySelectorAll('label'));\n        const shuffled = shuffle(labels);\n        shuffled.forEach(label => label.parentNode.removeChild(label));\n        const heading = question.querySelector('h3');\n        shuffled.forEach(label => heading.parentNode.appendChild(label));\n      });\n    }\n\n    let timer;\n    let seconds = 0;\n    const timeLimit = 300; // 5 minutes\n    const examName = \"How to use AI APIs\";\n\n    function startQuiz() {\n      document.getElementById('titlePage').classList.add('hidden');\n      document.getElementById('quizContainer').classList.remove('hidden');\n      randomizeAnswers();\n      startTimer();\n    }\n\n    function startTimer() {\n      timer = setInterval(() => {\n        seconds++;\n        const minutes = Math.floor(seconds / 60);\n        const rem = seconds % 60;\n        document.getElementById('timer').textContent =\n          String(minutes).padStart(2, '0') + \":\" + String(rem).padStart(2, '0');\n        if (seconds >= timeLimit) {\n          clearInterval(timer);\n          calculateScore(true);\n        }\n      }, 1000);\n    }\n\n    // Formats date as \"dd.mm.yyyy hh:mm\"\n    function formatDate(date) {\n      const options = {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false\n      };\n      const formatted = date.toLocaleString(\"en-GB\", options);\n      return formatted.replace(/\\//g, \".\").replace(\", \", \" \");\n    }\n\n    function calculateScore(timeout = false) {\n      const submitButton = document.getElementById('submitBtn');\n      if (submitButton) {\n        submitButton.style.display = 'none';\n      }\n      clearInterval(timer);\n      let totalPoints = 0;\n      let maxPoints = 0;\n      const questions = document.querySelectorAll('.question');\n      questions.forEach(question => {\n        const points = parseInt(question.dataset.points) || 1;\n        maxPoints += points;\n        if (points === 0) return; // Skip user info block\n        let correct = true;\n        const inputs = question.querySelectorAll('input');\n        let selectedValues = [];\n        let correctValues = [];\n        inputs.forEach(inp => {\n          if (inp.checked) selectedValues.push(inp.value);\n          if (inp.dataset.correct === \"true\") correctValues.push(inp.value);\n        });\n        if (\n          selectedValues.length !== correctValues.length ||\n          !selectedValues.every(val => correctValues.includes(val))\n        ) {\n          correct = false;\n        }\n        if (correct) {\n          totalPoints += points;\n          question.classList.add('correct');\n        } else {\n          question.classList.add('incorrect');\n          inputs.forEach(inp => {\n            if (inp.dataset.correct === \"true\") {\n              inp.parentElement.classList.add('correct-answer');\n            }\n          });\n        }\n      });\n      const percentage = ((totalPoints / maxPoints) * 100).toFixed(1);\n      const timeUsed = `${Math.floor(seconds / 60)}m ${seconds % 60}s`;\n\n      let resultsHTML = `\n        <h3>Exam Results</h3>\n        <p>Your score: ${totalPoints} / ${maxPoints} (${percentage}%)</p>\n        <p>Time used: ${timeUsed}</p>\n        ${percentage >= 80 ? \"Congratulations! You passed!\" : \"Try again! Review your mistakes below.\"}\n        ${timeout ? \"<p class='warning'>Time limit exceeded!</p>\" : \"\"}\n      `;\n      resultsHTML += `\n        <button type=\"button\" onclick=\"location.reload()\">Retry</button>\n        <button type=\"button\" onclick=\"window.location.href='#'\">Read Again</button>\n        <button type=\"button\" id=\"taskButton\" onclick=\"loadTask()\">Task</button>\n      `;\n      document.getElementById('result').innerHTML = resultsHTML;\n\n      const fullName = document.querySelector('[name=\"fullName\"]')?.value.trim() || \"\";\n      const profession = document.querySelector('[name=\"profession\"]')?.value.trim() || \"\";\n      const recruiter = document.querySelector('[name=\"recruiter\"]')?.value.trim() || \"\";\n\n      // Include the \"day\" parameter so it gets sent to the server\n      const postData = {\n        fullName,\n        profession,\n        recruiter,\n        day: \"2\",  // Changed day parameter\n        examName,\n        scoreObtained: totalPoints,\n        scoreTotal: maxPoints,\n        timeUsed: seconds,\n        timeTotal: timeLimit,\n        date: formatDate(new Date())\n      };\n\n      try {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n        fetch(\"https://auto.crm-s.com/webhook/Onboarding/Update\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json, text/plain, */*\"\n          },\n          body: JSON.stringify(postData),\n          mode: \"cors\"\n        })\n        .then(async (res) => {\n          console.log(\"POST response status:\", res.status);\n          const text = await res.text();\n          console.log(\"POST response body:\", text);\n        })\n        .catch(err => {\n          console.error(\"Error in POST:\", err);\n        });\n      } catch (error) {\n        console.error(\"Error submitting quiz results:\", error);\n      }\n    }\n\n    // loadTask() replaces the quiz view with task instructions.\n    function loadTask() {\n      const taskMarkdown = `# 🛠 Fetching AI-Generated Content Using APIs - Practice Task\n\n🔹 Create an interactive learning scenario to apply AI API concepts. Focus on: \n- Understanding how to authenticate and use AI APIs\n- Exploring automation tools for AI workflows\n- Implementing practical AI API integrations\n\n# ✅  Steps: \n1. Scenario Creation: Design a workflow where an AI API is used to generate content. For example, imagine a system where a user submits a request for a blog introduction on AI automation. Outline the process: User Request (A text input is provided for example \"Generate a blog intro about AI automation\"), API Request (The system sends this request to an AI API for example \"such as OpenAI’s GPT-4 for text or Stable Diffusion for images\"), AI Processing (The AI model processes the request and generates content) and Response Delivery (The API returns the generated content for example \"as text, JSON, or an image URL\").\n\n2. Application of Learning: Demonstrate how to authenticate API requests: Explain how an API call works by showing a code snippet that sends a request to an AI API and retrieves a response. Use a practical example (in Python or Postman) that demonstrates sending a request and processing the response.\n\n3. Automation Integration: Demonstrate how to connect an AI API to an automation tool like Zapier or n8n: Set Up the Integration (Outline the steps to create a workflow in the chosen tool for example \"trigger on receiving a new email, then send the email content to the AI API\") and\nDefine the Trigger and Action (Show how an event like a new email initiates an API call that returns AI-generated content, which then leads to an automated action for example \"sending a reply or updating a database\").\n4. Reflection: Create a simple diagram that maps the trigger to the API call and then to the final outcome\n\n# ✏️ When finished, mark the checkbox and optionally provide a link to app.diagrams.net or app.napkin.ai that displays the work completed for the practical assignment.`;\n\n      const parsedMarkdown = parseMarkdown(taskMarkdown);\n      document.body.innerHTML = `\n        <div style=\"font-family: 'Open Sans', sans-serif; background: #F8F9FA; padding: 2rem; max-width: 800px; margin: 0 auto;\">\n          ${parsedMarkdown}\n          <div style=\"margin-top: 2rem;\">\n            <label for=\"taskLinkInput\" style=\"font-weight: bold;\">Optional link to your work:</label>\n            <input type=\"text\" id=\"taskLinkInput\" placeholder=\"https://app.napkin.ai/page/...\" style=\"width: 100%; padding: 8px; margin: 4px 0 1rem;\">\n            <input type=\"checkbox\" id=\"taskCompletedCheckbox\">\n            <label for=\"taskCompletedCheckbox\">Task Completed</label>\n          </div>\n        </div>\n      `;\n\n      const checkbox = document.getElementById(\"taskCompletedCheckbox\");\n      checkbox.addEventListener(\"change\", function() {\n        if (checkbox.checked) {\n          const taskLink = document.getElementById(\"taskLinkInput\").value.trim() || \"\";\n          checkbox.disabled = true;\n          try {\n            fetch(\"https://auto.crm-s.com/webhook/Onboarding/UpdateTaskTable\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json, text/plain, */*\"\n              },\n              body: JSON.stringify({\n                examName: \"How to use AI APIs\",\n                day: \"2\",  // Changed day parameter for task as well\n                link: taskLink,\n                date: formatDate(new Date())\n              }),\n              mode: \"cors\"\n            })\n            .then(async (res) => {\n              console.log(\"Task completed webhook status:\", res.status);\n              const text = await res.text();\n              console.log(\"Task completed webhook body:\", text);\n            })\n            .catch(err => {\n              console.error(\"Error sending task completed webhook:\", err);\n              alert(\"Your task has been marked as complete, but there was an issue connecting to the server. Your instructor will be notified.\");\n            });\n          } catch (error) {\n            console.error(\"Error marking task as complete:\", error);\n            alert(\"Your task has been marked as complete, but there was an issue connecting to the server. Your instructor will be notified.\");\n          }\n        }\n      });\n    }\n\n    // Markdown parser: converts headings (#, ##, ###, ####) into <details> blocks\n    function parseMarkdown(markdownText) {\n      const lines = markdownText.split('\\n');\n      let html = \"\";\n      const stack = [];\n      lines.forEach(line => {\n        const match = line.match(/^(#{1,4})\\s+(.*)/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          while (stack.length && stack[stack.length - 1] >= level) {\n            html += \"</details>\";\n            stack.pop();\n          }\n          html += `<details><summary>${text}</summary>`;\n          stack.push(level);\n        } else {\n          html += line + \"<br>\";\n        }\n      });\n      while (stack.length) {\n        html += \"</details>\";\n        stack.pop();\n      }\n      return html;\n    }\n  </script>\n</body>\n</html>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        220,
        0
      ],
      "id": "ab575c3a-f9cf-4ef0-a0fc-aa562dfdfbb3",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b13459cd-2f8f-4af6-abda-5d91f75a02db",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bce7fa653659e581ce25e9a76408cecc1db830bd4c16d1cddb638823b7bca87a"
  },
  "id": "wURwIij0igLadl7F",
  "tags": [
    {
      "createdAt": "2025-03-03T09:45:59.203Z",
      "updatedAt": "2025-03-03T09:45:59.203Z",
      "id": "Fm7JeKGvgj23tI31",
      "name": "Tests"
    },
    {
      "createdAt": "2025-03-03T14:31:08.720Z",
      "updatedAt": "2025-03-03T14:31:08.720Z",
      "id": "HELbjAXco7AikW1p",
      "name": "Day 2"
    },
    {
      "createdAt": "2025-03-04T15:18:45.103Z",
      "updatedAt": "2025-03-04T15:18:45.103Z",
      "id": "Lv0IHVqEPpRYfyh7",
      "name": "AI Onboarding"
    },
    {
      "createdAt": "2025-02-28T12:15:59.970Z",
      "updatedAt": "2025-02-28T12:15:59.970Z",
      "id": "sdWf5s6naE3QVMN8",
      "name": "Onboarding"
    }
  ]
}