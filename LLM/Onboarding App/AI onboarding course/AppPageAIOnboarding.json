{
  "name": "AppPageAIOnboarding",
  "nodes": [
    {
      "parameters": {
        "path": "onboarding/ai",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "87b55406-8f09-4003-be15-d35090ce63a5",
      "name": "Webhook",
      "webhookId": "87bd9b42-88cd-4a75-86d6-395d61b1be2d"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Onboarding for AI</title>\n  <!-- Подключаем marked.js для парсинга Markdown -->\n  <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n  <style>\n    body {\n      margin: 0;\n      font-family: Arial, sans-serif;\n      background-color: #f0f0f0;\n    }\n    .container {\n      padding: 20px;\n    }\n    .hidden {\n      display: none;\n    }\n    .center {\n      text-align: center;\n    }\n    button {\n      padding: 10px 20px;\n      margin: 10px;\n      cursor: pointer;\n      border: none;\n      background-color: #4CAF50;\n      color: white;\n      border-radius: 5px;\n    }\n    button:hover {\n      background-color: #45a049;\n    }\n    .spinner {\n      border: 8px solid #f3f3f3;\n      border-top: 8px solid #3498db;\n      border-radius: 50%;\n      width: 60px;\n      height: 60px;\n      animation: spin 2s linear infinite;\n      margin: 20px auto;\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n    .markdown-content p {\n      margin: 10px 0;\n    }\n    .markdown-content ul {\n      margin: 10px 20px;\n      padding-left: 20px;\n    }\n    .markdown-content table {\n      border-collapse: collapse;\n      width: 100%;\n      margin: 10px 0;\n    }\n    .markdown-content table,\n    .markdown-content th,\n    .markdown-content td {\n      border: 1px solid #ddd;\n    }\n    .markdown-content th,\n    .markdown-content td {\n      padding: 8px;\n      text-align: left;\n    }\n    details {\n      background: #fff;\n      margin: 10px 0;\n      padding: 10px;\n      border-radius: 5px;\n    }\n    summary {\n      cursor: pointer;\n    }\n    details > summary {\n      font-size: 1.2em;\n      font-weight: bold;\n    }\n    details details > summary {\n      font-size: 0.9em;\n      font-weight: bold;\n    }\n    details details details > summary {\n      font-size: 0.8em;\n      font-weight: bold;\n    }\n    .markdown-content pre {\n      background-color: #f9f9f9;\n      border-left: 4px solid #ccc;\n      padding: 10px;\n      overflow-x: auto;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      margin: 10px 0;\n    }\n    .markdown-content code {\n      background-color: #f9f9f9;\n      padding: 2px 4px;\n      border-radius: 3px;\n    }\n  </style>\n</head>\n<body>\n  <!-- Домашняя страница -->\n  <div id=\"home\" class=\"container center\">\n    <div id=\"day-selection\">\n      <h1>Onboarding for AI</h1>\n      <p>\n        Courses:&nbsp;\n        <select id=\"course-select\" onchange=\"handleCourseChange()\">\n          <option value=\"ai-engineer\">AI Engineer</option>\n          <option value=\"lg-onboarding\">LG Onboarding</option>\n          <!-- Удаляем старую строку Prompt Engineering и добавляем новую -->\n          <option value=\"profession-prompt-engineering\">Profession: Prompt Engineering</option>\n        </select>\n      </p>\n      \n      <div style=\"margin: 30px 0;\">\n        <p>Quick Reference:</p>\n        <button onclick=\"openVocabulary()\">AI Vocabulary</button>\n      </div>\n      \n      <div style=\"margin-top: 30px;\">\n        <p>Select Training Day:</p>\n        <button onclick=\"selectDay(1)\">Day 1</button>\n        <button onclick=\"selectDay(2)\">Day 2</button>\n        <button onclick=\"selectDay(3)\">Day 3</button>\n        <button onclick=\"selectDay(4)\">Day 4</button>\n        <button onclick=\"selectDay(5)\">Day 5</button>\n      </div>\n    </div>\n    <div id=\"task-selection\" class=\"hidden\">\n      <h1 id=\"day-header\"></h1>\n      <div id=\"task-buttons\"></div>\n      <button onclick=\"goBackToDaySelection()\">Back</button>\n    </div>\n  </div>\n\n  <!-- Страница гайда -->\n  <div id=\"guide\" class=\"container hidden\">\n    <h1 id=\"guide-title\">Guide:</h1>\n    <div id=\"loading-spinner\" class=\"center\">\n      <div class=\"spinner\"></div>\n      <p>Loading, please wait...</p>\n    </div>\n    \n    <!-- Статичные аудио блоки -->\n    <div id=\"audio-first-lesson\" class=\"hidden center\" style=\"margin-bottom: 20px;\">\n      <iframe width=\"100%\" height=\"300\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n              src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/2041898968&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\">\n      </iframe>\n      <div style=\"font-size: 10px; color: #cccccc; line-break: anywhere; word-break: normal; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;\">\n        <a href=\"https://soundcloud.com/content-remote-helpers\" title=\"Content Remote Helpers\" target=\"_blank\" style=\"color: #cccccc; text-decoration: none;\">Content Remote Helpers</a> · \n        <a href=\"https://soundcloud.com/content-remote-helpers/screen-recording-audio\" title=\"First Lesson Audio\" target=\"_blank\" style=\"color: #cccccc; text-decoration: none;\">First Lesson Audio</a>\n      </div>\n    </div>\n    \n    <div id=\"audio-vocabulary\" class=\"hidden center\" style=\"margin-bottom: 20px;\">\n      <iframe width=\"100%\" height=\"300\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n              src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/2028455920&color=%230066cc&auto_play=false\">\n      </iframe>\n      <div style=\"font-size: 10px; color: #cccccc; white-space: nowrap;\">\n        <a href=\"https://soundcloud.com/developers-remote-helpers\" target=\"_blank\" style=\"color: #cccccc; text-decoration: none;\">Developers Remote Helpers</a> · \n        <a href=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/2028455920\" target=\"_blank\" style=\"color: #cccccc; text-decoration: none;\">AI Vocabulary</a>\n      </div>\n    </div>\n    \n    <!-- Динамический аудио блок для уроков с индивидуальным аудио Embed -->\n    <div id=\"audio-dynamic\" class=\"hidden center\" style=\"margin-bottom: 20px;\"></div>\n    \n    <!-- Контейнер для Markdown контента -->\n    <div id=\"markdown-content\" class=\"markdown-content hidden\"></div>\n    \n    <!-- Кнопка Test для выбранного модуля -->\n    <div class=\"center\" style=\"margin-top:20px;\">\n      <button id=\"test-button\" onclick=\"window.location.href = currentTopic.testWebhook\">Test</button>\n    </div>\n    <!-- Кнопка Back для возврата к списку топиков -->\n    <div class=\"center\" style=\"margin-top:20px;\">\n      <button onclick=\"goBackToTaskSelection()\">Back</button>\n    </div>\n  </div>\n  \n  <script>\n    // Глобальные переменные для текущей темы и выбранного дня\n    window.currentTopic = null;\n    window.currentDay = null;\n    let currentTasks = [];\n    \n    // Уроки разделены на 5 дней\n    const professionTasks = {\n      \"ai-engineer\": {\n        1: [\n          {\n            title: \"What is Artificial Intelligence?\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/d3424e5a-a604-4c59-8594-c4cb4e7f194b\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/WhatIsArtificialIntelligence\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c7039de5da5\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"1) What is Artificial Intelligence\"></iframe>'\n          },\n          {\n            title: \"How Does AI Work?\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/0e52b435-3839-44b8-ab95-8866f1291c4a\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/HowDoesAiWorks\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c7039d5dba5\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"2) How Does AI Work\"></iframe>'\n          },\n          {\n            title: \"The AI Ecosystem\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/d8e17a85-294d-4d9b-aa3c-306956e31ce5\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/TheAIEcosystem\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c70397554e4\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"3) The AI Ecosystem\"></iframe>'\n          },\n          {\n            title: \"AI Tools Landscape\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/fd217209-af74-440b-a4ff-1e3c0e56d0de\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/AIToolsLandscape\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c7039a5088e\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"4) AI Tools Landscape\"></iframe>'\n          },\n          {\n            title: \"AI Learning\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/a000cc94-90d6-493f-80f9-9ed3c2f51b67\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/AILearning\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c7039871983\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"5) AI Learning\"></iframe>'\n          }\n        ],\n        2: [\n          {\n            title: \"What is an API?\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/581c39d2-f905-42c1-9412-c7726ffcda14\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/WhatIsAnAPI\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c70441abd09\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"6) What is an API\"></iframe>'\n          },\n          {\n            title: \"How to Use AI APIs?\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/e2e26504-97f6-4b10-b4fb-bae1c2d80923\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/HowToUseAIAPIs\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c70441b24de\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"7) How to Use AI APIs\"></iframe>'\n          },\n          {\n            title: \"Real-World API Use Cases\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/07f212d7-8e10-4c45-81aa-9462241c1ede\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/Real-WorldAPIUseCases\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c7043f2fe07\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"8) Real-World API Use Cases\"></iframe>'\n          }\n        ],\n        3: [\n          {\n            title: \"What is Prompt Engineering?\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/3b220bee-17c7-44a7-ada4-5bbc3b1f6bda\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/WhatIsPromptEngineering\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c7043f47d16\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"9) What is Prompt Engineering\"></iframe>'\n          },\n          {\n            title: \"Best Practices for Prompt Writing\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/b6a48197-7776-45fb-9cec-88c976971b57\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/BestPracticesForPromptWriting\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c7043fcdca4\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"10) Best Practices for Prompt Writing\"></iframe>'\n          },\n          {\n            title: \"Advanced Prompt Engineering\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/b6b18a77-edce-4b68-9430-4ea88b600da0\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/AdvancedPromptEngineering\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c705c906abd\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"11) Advanced Prompt Engineering\"></iframe>'\n          }\n        ],\n        4: [\n          {\n            title: \"What are Automation Triggers?\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/ad94d93c-ed85-4366-a496-317127b44755\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/WhatAreAutomationTriggers\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c705cae23dc\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"12) What are Automation Triggers\"></iframe>'\n          },\n          {\n            title: \"Trigger-Based AI Automations\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/ef902ea0-81fb-401e-a973-3ced1b908a21\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/Trigger-BasedAIAutomations\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c705cd74722\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"13) Trigger-Based AI Automations\"></iframe>'\n          },\n          {\n            title: \"How to Set Up AI Triggers?\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/2d5fe2e8-8d52-4d96-875b-4602d927f9c4\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/HowToSetUpAITriggers\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c705d239ab3\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"14) How to Set Up AI Triggers\"></iframe>'\n          }\n        ],\n        5: [\n          {\n            title: \"Understanding Webhooks\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/2f434695-09a9-41ff-9426-878c9408d0d0\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/UnderstandingWebhooks\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c705d5a6383\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"15) Understanding Webhooks\"></iframe>'\n          },\n          {\n            title: \"Webhooks vs. Triggers: Key Differences\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/9b03e91a-1780-442e-852a-c11c774950dd\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/WebhooksVsTriggersKeyDifferences\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c705d7b1bb7\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"16) Webhooks vs. Triggers Key Differences\"></iframe>'\n          },\n          {\n            title: \"Setting Up Webhooks in AI Workflows\",\n            contentWebhook: \"https://auto.crm-s.com/webhook/441e348f-8ec2-4823-8285-d4d8a3131f23\",\n            testWebhook: \"https://auto.crm-s.com/webhook/onboarding/ai/tests/SettingUpWebhooksInAIWorkflows\",\n            audioEmbed: '<iframe src=\"https://audiomack.com/embed/dev-763/song/67c705d9c9e91\" scrolling=\"no\" width=\"100%\" height=\"252\" frameborder=\"0\" title=\"17) Setting Up Webhooks in AI Workflows\"></iframe>'\n          }\n        ]\n      }\n    };\n    \n    // Словарь\n    const vocabularyTopic = {\n      title: \"AI Vocabulary\",\n      contentWebhook: \"https://auto.crm-s.com/webhook/b738c824-4044-4704-8053-bc0f39b2ae77\"\n    };\n    \n    // При смене курса\n    function handleCourseChange() {\n      const selectedCourse = document.getElementById(\"course-select\").value;\n      if (selectedCourse === \"lg-onboarding\") {\n        window.location.href = \"https://hook.eu1.make.com/jcjl176nvrhlm4ag7qiixjzssxqdbl5n\";\n      }\n      else if (selectedCourse === \"profession-prompt-engineering\") {\n        window.location.href = \"https://auto.crm-s.com/webhook/PromptEngineeringOnboarding\";\n      }\n      // Если выбрали AI Engineer — остаемся на текущей странице (ничего не делаем)\n    }\n    \n    // Обновление видимости кнопки Test\n    function updateTestButtonVisibility() {\n      const testButton = document.getElementById(\"test-button\");\n      if (window.currentTopic && window.currentTopic.testWebhook) {\n        testButton.style.display = \"block\";\n      } else {\n        testButton.style.display = \"none\";\n      }\n    }\n    \n    function updateAudioEmbed() {\n      const audioDynamic = document.getElementById(\"audio-dynamic\");\n      if (window.currentTopic && window.currentTopic.audioEmbed) {\n        audioDynamic.innerHTML = window.currentTopic.audioEmbed;\n        audioDynamic.classList.remove(\"hidden\");\n      } else {\n        audioDynamic.innerHTML = \"\";\n        audioDynamic.classList.add(\"hidden\");\n      }\n    }\n    \n    function selectDay(day) {\n      window.currentDay = day;\n      // Так как мы используем AI Engineer курс локально\n      const selectedProfession = \"ai-engineer\";\n      // Копируем уроки выбранного дня\n      currentTasks = JSON.parse(JSON.stringify(professionTasks[selectedProfession][day]));\n      const dayHeader = document.getElementById(\"day-header\");\n      if (dayHeader) dayHeader.innerText = \"Day \" + day;\n      const daySelection = document.getElementById(\"day-selection\");\n      if (daySelection) daySelection.classList.add(\"hidden\");\n      const taskSelection = document.getElementById(\"task-selection\");\n      if (taskSelection) taskSelection.classList.remove(\"hidden\");\n      const taskButtonsDiv = document.getElementById(\"task-buttons\");\n      if (taskButtonsDiv) {\n        taskButtonsDiv.innerHTML = \"\";\n        currentTasks.forEach((task, index) => {\n          const btn = document.createElement(\"button\");\n          btn.innerText = task.title;\n          btn.onclick = function() { selectTask(index); };\n          taskButtonsDiv.appendChild(btn);\n        });\n      }\n    }\n    \n    function goBackToDaySelection() {\n      const taskSelection = document.getElementById(\"task-selection\");\n      if (taskSelection) taskSelection.classList.add(\"hidden\");\n      const daySelection = document.getElementById(\"day-selection\");\n      if (daySelection) daySelection.classList.remove(\"hidden\");\n    }\n    \n    function goBackToTaskSelection() {\n      hideAllAudio();\n      const markdownDiv = document.getElementById(\"markdown-content\");\n      if (markdownDiv) markdownDiv.innerHTML = \"\";\n      window.currentTopic = null;\n      const home = document.getElementById(\"home\");\n      if (home) home.classList.remove(\"hidden\");\n      if (window.currentDay !== null) selectDay(window.currentDay);\n      const guide = document.getElementById(\"guide\");\n      if (guide) guide.classList.add(\"hidden\");\n    }\n    \n    window.goBack = function() {\n      showSection(\"home\");\n      const daySelection = document.getElementById(\"day-selection\");\n      if (daySelection) daySelection.classList.remove(\"hidden\");\n      const taskSelection = document.getElementById(\"task-selection\");\n      if (taskSelection) taskSelection.classList.add(\"hidden\");\n    };\n    \n    function openVocabulary() {\n      window.currentTopic = vocabularyTopic;\n      const guideTitle = document.getElementById(\"guide-title\");\n      if (guideTitle) guideTitle.innerText = \"Guide: \" + window.currentTopic.title;\n      hideAllAudio();\n      updateTestButtonVisibility();\n      const audioDynamic = document.getElementById(\"audio-dynamic\");\n      if (audioDynamic) {\n        audioDynamic.innerHTML = \"\";\n        audioDynamic.classList.add(\"hidden\");\n      }\n      showSection(\"guide\");\n      fetchMarkdownContent();\n    }\n    \n    function selectTask(index) {\n      window.currentTopic = currentTasks[index];\n      const guideTitle = document.getElementById(\"guide-title\");\n      if (guideTitle) guideTitle.innerText = \"Guide: \" + window.currentTopic.title;\n      hideAllAudio();\n      updateTestButtonVisibility();\n      updateAudioEmbed();\n      showSection(\"guide\");\n      fetchMarkdownContent();\n    }\n    \n    function hideAllAudio() {\n      const audioIds = [\"audio-first-lesson\", \"audio-vocabulary\", \"audio-dynamic\"];\n      audioIds.forEach(id => {\n        const el = document.getElementById(id);\n        if (el) el.classList.add(\"hidden\");\n      });\n    }\n    \n    function showSection(id) {\n      const home = document.getElementById(\"home\");\n      if (home) home.classList.add(\"hidden\");\n      const guide = document.getElementById(\"guide\");\n      if (guide) guide.classList.add(\"hidden\");\n      const target = document.getElementById(id);\n      if (target) target.classList.remove(\"hidden\");\n    }\n    \n    function fetchMarkdownContent() {\n      const url = window.currentTopic.contentWebhook;\n      const spinner = document.getElementById(\"loading-spinner\");\n      const markdownDiv = document.getElementById(\"markdown-content\");\n      if (spinner) spinner.classList.remove(\"hidden\");\n      if (markdownDiv) markdownDiv.classList.add(\"hidden\");\n      \n      if (!url || url.startsWith(\"placeholder\")) {\n        if (spinner) spinner.classList.add(\"hidden\");\n        if (markdownDiv) {\n          markdownDiv.classList.remove(\"hidden\");\n          markdownDiv.innerHTML = \"<p>Placeholder content: Content will be added soon!</p>\";\n        }\n        return;\n      }\n      \n      fetch(url)\n        .then(response => {\n          if (!response.ok) throw new Error(\"Network error\");\n          return response.text();\n        })\n        .then(markdown => {\n          if (markdown.trim() === \"# \" + window.currentTopic.title) {\n            markdown = \"## Topics Covered\\n- (Placeholder)\\n\\n## Guide Link\\n(Placeholder)\\n\\n## Introduction\\n(Placeholder)\\n\\n## Conclusion\\n(Placeholder)\\n\";\n          }\n          if (markdown.trim() === \"\") {\n            if (spinner) spinner.classList.add(\"hidden\");\n            if (markdownDiv) {\n              markdownDiv.classList.remove(\"hidden\");\n              markdownDiv.innerHTML = \"<p>Content will be added soon!</p>\";\n            }\n            return;\n          }\n          if (!markdown.includes('#')) {\n            markdown = \"# \" + window.currentTopic.title + \"\\n\\n\" + markdown;\n          }\n          \n          const collapsibleHTML = createCollapsibleBlocks(markdown);\n          if (markdownDiv) {\n            markdownDiv.innerHTML = collapsibleHTML;\n            spinner.classList.add(\"hidden\");\n            markdownDiv.classList.remove(\"hidden\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Loading error:\", error);\n          if (spinner) spinner.innerHTML = \"<p>Error loading. Please contact team lead.</p>\";\n        });\n    }\n    \n    function createCollapsibleBlocks(markdown) {\n      markdown = markdown.trim();\n      const lines = markdown.split(\"\\n\");\n      let htmlOutput = \"\";\n      let currentLevel1Title = \"\";\n      let currentLevel1Content = [];\n      let inLevel1 = false;\n      \n      for (let line of lines) {\n        let match = line.match(/^#(?!#)\\s*(.+)/);\n        if (match) {\n          if (inLevel1) {\n            htmlOutput += renderLevel1Block(currentLevel1Title, currentLevel1Content.join(\"\\n\"));\n          }\n          currentLevel1Title = match[1].trim();\n          currentLevel1Content = [];\n          inLevel1 = true;\n        } else {\n          if (inLevel1) {\n            currentLevel1Content.push(line);\n          }\n        }\n      }\n      if (inLevel1) {\n        htmlOutput += renderLevel1Block(currentLevel1Title, currentLevel1Content.join(\"\\n\"));\n      } else if (!htmlOutput) {\n        htmlOutput = marked.parse(markdown);\n      }\n      return htmlOutput;\n    }\n    \n    function renderLevel1Block(title, content) {\n      const lines = content.split(\"\\n\");\n      let html = \"\";\n      let subBlocksHtml = \"\";\n      let currentSubTitle = \"\";\n      let currentSubContent = [];\n      let hasSubHeader = false;\n      let preambleLines = [];\n      \n      for (let line of lines) {\n        let subMatch = line.match(/^##(?!#)\\s*(.+)/);\n        if (subMatch) {\n          hasSubHeader = true;\n          if (currentSubTitle) {\n            subBlocksHtml += renderLevel2Block(currentSubTitle, currentSubContent.join(\"\\n\"));\n            currentSubContent = [];\n          }\n          currentSubTitle = subMatch[1].trim();\n        } else {\n          if (hasSubHeader) {\n            currentSubContent.push(line);\n          } else {\n            preambleLines.push(line);\n          }\n        }\n      }\n      if (currentSubTitle) {\n        subBlocksHtml += renderLevel2Block(currentSubTitle, currentSubContent.join(\"\\n\"));\n      }\n      if (preambleLines.length) {\n        html += marked.parse(preambleLines.join(\"\\n\"));\n      }\n      html += subBlocksHtml;\n      \n      return `<details>\n  <summary>${title}</summary>\n  <div>${html}</div>\n</details>`;\n    }\n    \n    function renderLevel2Block(title, content) {\n      const lines = content.split(\"\\n\");\n      let html = \"\";\n      let subBlocksHtml = \"\";\n      let currentSubTitle = \"\";\n      let currentSubContent = [];\n      let hasSubHeader = false;\n      let preambleLines = [];\n      \n      for (let line of lines) {\n        let subMatch = line.match(/^###(?!#)\\s*(.+)/);\n        if (subMatch) {\n          hasSubHeader = true;\n          if (currentSubTitle) {\n            subBlocksHtml += renderLevel3Block(currentSubTitle, currentSubContent.join(\"\\n\"));\n            currentSubContent = [];\n          }\n          currentSubTitle = subMatch[1].trim();\n        } else {\n          if (hasSubHeader) {\n            currentSubContent.push(line);\n          } else {\n            preambleLines.push(line);\n          }\n        }\n      }\n      if (currentSubTitle) {\n        subBlocksHtml += renderLevel3Block(currentSubTitle, currentSubContent.join(\"\\n\"));\n      }\n      if (preambleLines.length) {\n        html += marked.parse(preambleLines.join(\"\\n\"));\n      }\n      html += subBlocksHtml;\n      \n      return `<details style=\"margin-left:20px;\">\n  <summary>${title}</summary>\n  <div>${html}</div>\n</details>`;\n    }\n    \n    function renderLevel3Block(title, content) {\n      let parsedContent = marked.parse(content);\n      return `<details style=\"margin-left:40px;\">\n  <summary>${title}</summary>\n  <div>${parsedContent}</div>\n</details>`;\n    }\n  </script>\n</body>\n</html>\n",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        220,
        0
      ],
      "id": "eab871af-1384-46de-80dc-5b246b18210a",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "209eed22-9153-443b-98de-41e060c86cf8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bce7fa653659e581ce25e9a76408cecc1db830bd4c16d1cddb638823b7bca87a"
  },
  "id": "8hq3aBxOgIFesAFR",
  "tags": [
    {
      "createdAt": "2025-03-04T15:18:45.103Z",
      "updatedAt": "2025-03-04T15:18:45.103Z",
      "id": "Lv0IHVqEPpRYfyh7",
      "name": "AI Onboarding"
    },
    {
      "createdAt": "2025-03-05T12:08:14.838Z",
      "updatedAt": "2025-03-05T12:08:14.838Z",
      "id": "h0gNZ0pAAoyqemVi",
      "name": "app"
    },
    {
      "createdAt": "2025-02-28T12:15:59.970Z",
      "updatedAt": "2025-02-28T12:15:59.970Z",
      "id": "sdWf5s6naE3QVMN8",
      "name": "Onboarding"
    }
  ]
}