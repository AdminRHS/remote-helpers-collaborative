{
  "name": "AppTest How to work",
  "nodes": [
    {
      "parameters": {
        "path": "how-to-work",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "2c1c2b72-7f86-4d4c-8894-681b4ca987b3",
      "name": "Webhook",
      "webhookId": "5ee0c4c6-2205-4054-8d10-8fa7b4bf2351"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n  <title>Template Quiz</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --deep-blue: #081E2F;\n      --primary-yellow: #FCB305;\n      --red: #D32F2F;\n      --red-hover: #C62828;\n      --green: #2E7D32;\n      --green-hover: #1B5E20;\n      --blue: #197502;\n      --blue-dark: #1555C0;\n      --blue-light: #4245F5;\n    }\n    body {\n      font-family: 'Open Sans', sans-serif;\n      background: #F8F9FA;\n      padding: 2rem;\n      max-width: 800px;\n      margin: 0 auto;\n      min-height: 100vh;\n    }\n    #titlePage {\n      text-align: center;\n      padding: 1rem;\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n    #titlePage h1 {\n      font-size: 28px;\n      color: var(--deep-blue);\n      margin-bottom: 1rem;\n    }\n    .quiz-info {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(8, 30, 47, 0.1);\n      margin: 1rem auto;\n      max-width: 500px;\n    }\n    .info-item {\n      font-size: 15px;\n      color: #4A4A4A;\n      margin: 0.75rem 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    #timer {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--green);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-weight: 600;\n      box-shadow: 0 2px 6px rgba(46, 125, 50, 0.2);\n    }\n    .hidden {\n      display: none !important;\n      visibility: hidden;\n    }\n    \n    /* –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è —Ç–∏—Ç—É–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã */\n    @keyframes fadeOut {\n      from { opacity: 1; transform: scale(1); }\n      to { opacity: 0; transform: scale(0.95); }\n    }\n    \n    @keyframes fadeIn {\n      from { opacity: 0; transform: scale(1.05); }\n      to { opacity: 1; transform: scale(1); }\n    }\n    \n    .fade-out {\n      animation: fadeOut 0.6s ease forwards;\n    }\n    \n    .fade-in {\n      animation: fadeIn 0.6s ease forwards;\n    }\n    .question {\n      background: white;\n      border-radius: 8px;\n      padding: 1.5rem;\n      margin-bottom: 1.5rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n      transition: all 0.3s ease;\n    }\n    .question h3 {\n      font-size: 16px;\n      font-weight: 600;\n      color: var(--deep-blue);\n      margin: 0 0 1rem 0;\n    }\n    label {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.75rem;\n      border-radius: 4px;\n      font-size: 14px;\n      color: #4A4A4A;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    label:hover {\n      background: rgba(25, 118, 210, 0.04);\n    }\n    /* Radio buttons (single-answer) */\n    input[type=\"radio\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n    }\n    /* Checkboxes (multi-answer) */\n    input[type=\"checkbox\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n    }\n    input[type=\"text\"],\n    input[type=\"number\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 16px; /* –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –≤ iOS */\n      width: 100%;\n      box-sizing: border-box;\n      -webkit-appearance: none; /* –û—Ç–∫–ª—é—á–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ iOS */\n      appearance: none;\n    }\n    /* –ó–∞–º–µ–Ω—è–µ–º read-only –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –Ω–∞ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ */\n    select[name=\"profession\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 16px; /* –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –≤ iOS */\n      width: 100%;\n      box-sizing: border-box;\n      background: #fff;\n      color: #4A4A4A;\n      -webkit-appearance: none; /* –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤ iOS */\n      appearance: none;\n    }\n    button {\n      background: var(--green);\n      color: white;\n      border: none;\n      padding: 10px 20px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 15px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      display: block;\n      margin: 1rem auto 0;\n      letter-spacing: 0.5px;\n    }\n    button:hover {\n      background: var(--green-hover);\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(46, 125, 50, 0.3);\n    }\n    #result {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      text-align: center;\n      margin-top: 2rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n    }\n    .correct {\n      border-left: 4px solid var(--green);\n      background: #F0F9FF;\n    }\n    .incorrect {\n      border-left: 4px solid var(--red);\n    }\n    @media (max-width: 600px) {\n      body {\n        padding: 1rem;\n      }\n      .question {\n        padding: 1rem;\n      }\n      button {\n        width: 100%;\n        padding: 14px 20px;\n      }\n      #timer {\n        top: 10px;\n        right: 10px;\n        font-size: 14px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Title Page -->\n  <div id=\"titlePage\">\n    <h1>ü§ñ ‚ú® How To Work</h1>\n    <div class=\"quiz-info\">\n      <div class=\"info-item\">\n        <span>Questions:</span>\n        <strong>15</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Time Limit:</span>\n        <strong>5 minutes</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Passing Score:</span>\n        <strong>80%</strong>\n      </div>\n      <div class=\"info-item\" style=\"color: var(--green); font-weight: bold; display: flex; justify-content: space-between; align-items: flex-start;\">\n        <span>Good news: üòÅ</span>\n        <strong style=\"text-align: right; max-width: 70%;\">You can try this exam multiple times, no need to pass on your first attempt!</strong>\n      </div>\n      <div class=\"info-item\" style=\"color: var(--red); font-weight: bold; display: flex; justify-content: space-between; align-items: flex-start;\">\n        <span>Bad news: üò•</span>\n        <strong style=\"text-align: right; max-width: 70%;\">You must enter your full name (first and last name) before submitting</strong>\n      </div>\n      <button id=\"startExamBtn\">Start Exam</button>\n    </div>\n  </div>\n\n  <!-- Quiz Container -->\n  <div id=\"quizContainer\" class=\"hidden\">\n    <div id=\"timer\">00:00</div>\n    <h1>How to work</h1>\n    <form id=\"examForm\">\n      <!-- User Data Block (not scored) -->\n      <div class=\"question\" data-points=\"0\">\n        <h3>Enter Your Information</h3>\n        <label>\n          Your Full Name (First and Last Name): (required)\n          <input type=\"text\" name=\"fullName\" placeholder=\"e.g., John Doe\" required pattern=\"^\\s*[A-Za-z–ê-–Ø–∞-—è–Å—ë]+\\s+[A-Za-z–ê-–Ø–∞-—è–Å—ë]+\\s*$\" title=\"Please enter both your first and last name\">\n        </label>\n        <label>\n          Your Profession:\n          <select name=\"profession\">\n            <option value=\"3d designer\">3d designer</option>\n            <option value=\"account manager\">account manager</option>\n            <option value=\"affiliate manager\">affiliate manager</option>\n            <option value=\"analyst\">analyst</option>\n            <option value=\"animator\">animator</option>\n            <option value=\"back end developer\">back end developer</option>\n            <option value=\"chat operator\">chat operator</option>\n            <option value=\"content manager\">content manager</option>\n            <option value=\"copywriter\">copywriter</option>\n            <option value=\"email marketer\">email marketer</option>\n            <option value=\"event manager\">event manager</option>\n            <option value=\"financial manager\">financial manager</option>\n            <option value=\"front end developer\">front end developer</option>\n            <option value=\"full stack developer\">full stack developer</option>\n            <option value=\"graphic designer\">graphic designer</option>\n            <option value=\"hr manager\">hr manager</option>\n            <option value=\"illustrator\">illustrator</option>\n            <option value=\"influencer manager\">influencer manager</option>\n            <option value=\"interior designer\">interior designer</option>\n            <option value=\"investment manager\">investment manager</option>\n            <option value=\"lead generator\">lead generator</option>\n            <option value=\"linkbuilder\">linkbuilder</option>\n            <option value=\"media buyer\">media buyer</option>\n            <option value=\"mobile developer\">mobile developer</option>\n            <option value=\"mobile video editor\">mobile video editor</option>\n            <option value=\"motion designer\">motion designer</option>\n            <option value=\"personal assistant\">personal assistant</option>\n            <option value=\"ppc specialist\">ppc specialist</option>\n            <option value=\"pr manager\">pr manager</option>\n            <option value=\"project manager\">project manager</option>\n            <option value=\"proofreader\">proofreader</option>\n            <option value=\"qa\">qa</option>\n            <option value=\"recruiter\">recruiter</option>\n            <option value=\"sales manager\">sales manager</option>\n            <option value=\"seo manager\">seo manager</option>\n            <option value=\"social media manager\">social media manager</option>\n            <option value=\"system administrator\">system administrator</option>\n            <option value=\"targetologist\">targetologist</option>\n            <option value=\"tourism manager\">tourism manager</option>\n            <option value=\"ui/ux designer\">ui/ux designer</option>\n            <option value=\"video editor\">video editor</option>\n            <option value=\"web designer\">web designer</option>\n            <option value=\"wordpress designer\">wordpress designer</option>\n          </select>\n        </label>\n        <label>\n          Your Recruiter:\n          <select name=\"recruiter\" style=\"padding: 10px; border-radius: 6px; border: 1px solid #DEE2E6; background-color: #fff; color: #4A4A4A; font-size: 15px; width: 100%; box-sizing: border-box;\">\n            <option value=\"Anastasia Fadeeva\">Anastasia Fadeeva</option>\n            <option value=\"Elena Ermakova\">Elena Ermakova</option>\n            <option value=\"Anna Aleksandrova\">Anna Aleksandrova</option>\n            <option value=\"Sabina Gasanova\">Sabina Gasanova</option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Question 1 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>1. What is the main focus of Lesson 1?</h3>\n        <label><input type=\"radio\" name=\"q1\" value=\"A\"> A) Deep research techniques</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"B\"> B) Activating Yolo Mode</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"C\" data-correct=\"true\"> C) Setting Up Your Workspace</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"D\"> D) Practical Assignment</label>\n      </div>\n\n      <!-- Question 2 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>2. According to Lesson 1, which action is critical for ensuring team file synchronization with Dropbox?</h3>\n        <label><input type=\"radio\" name=\"q2\" value=\"A\"> A) Regularly restarting Cursor</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"B\"> B) Using specific file naming templates</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"C\" data-correct=\"true\"> C) Granting necessary permissions to Dropbox</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"D\"> D) Frequent communication on Discord</label>\n      </div>\n\n      <!-- Question 3 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>3. For effective teamwork, why is auto-saving of files highlighted as critically important?</h3>\n        <label><input type=\"radio\" name=\"q3\" value=\"A\"> A) To reduce file size</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"B\"> B) To speed up computer performance</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"C\"> C) To simplify file organization on a personal computer</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"D\" data-correct=\"true\"> D) To prevent data loss and ensure synchronization</label>\n      </div>\n\n      <!-- Question 4 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>4. What primary capability does 'Yolo Mode' unlock within the Cursor IDE?</h3>\n        <label><input type=\"radio\" name=\"q4\" value=\"A\"> A) Access advanced debugging tools</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"B\"> B) Automatically share code with team members</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"C\"> C) Run code in a sandboxed environment</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"D\" data-correct=\"true\"> D) Edit files on their computer</label>\n      </div>\n\n      <!-- Question 5 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>5. Under which top-level menu in Cursor would you typically find the 'Settings' to access further configuration tabs like 'Features'?</h3>\n        <label><input type=\"radio\" name=\"q5\" value=\"A\"> A) File</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"B\"> B) Edit</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"C\" data-correct=\"true\"> C) Settings</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"D\"> D) View</label>\n      </div>\n\n      <!-- Question 6 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>6. Which specific 'Auto-run Prompt' setting in Cursor immediately addresses code quality issues by fixing linting errors?</h3>\n        <label><input type=\"radio\" name=\"q6\" value=\"A\"> A) Auto-scroll to bottom</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"B\" data-correct=\"true\"> B) Iterate on lints</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"C\"> C) Auto-apply to files outside context in edit mode</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"D\"> D) Auto Import (for TypeScript)</label>\n      </div>\n\n      <!-- Question 7 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>7. Which AI tool is characterized as a \"universal smart analyst\" with strengths in detailed analysis and creative problem-solving?</h3>\n        <label><input type=\"radio\" name=\"q7\" value=\"A\"> A) Perplexity</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"B\"> B) Gemini</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"C\"> C) Grok</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"D\" data-correct=\"true\"> D) ChatGPT (GPT-4)</label>\n      </div>\n\n      <!-- Question 8 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>8. For tasks requiring quick access to fact-checked information with source citations, particularly in academic settings, which AI tool is most recommended?</h3>\n        <label><input type=\"radio\" name=\"q8\" value=\"A\"> A) Grok</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"B\"> B) Gemini</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"C\"> C) ChatGPT (GPT-4)</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"D\" data-correct=\"true\"> D) Perplexity</label>\n      </div>\n\n      <!-- Question 9 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>9. Which AI tool is deeply integrated within Google's services and is known for its robust multimodal capabilities and connection to real-time data?</h3>\n        <label><input type=\"radio\" name=\"q9\" value=\"A\"> A) Perplexity</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"B\" data-correct=\"true\"> B) Gemini</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"C\"> C) Grok</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"D\"> D) ChatGPT (GPT-4)</label>\n      </div>\n\n      <!-- Question 10 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>10. If you need to monitor social media trends or perform real-time fact-checking, which AI tool's specialization in current information makes it most suitable?</h3>\n        <label><input type=\"radio\" name=\"q10\" value=\"A\"> A) Gemini</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"B\"> B) ChatGPT (GPT-4)</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"C\"> C) Perplexity</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"D\" data-correct=\"true\"> D) Grok</label>\n      </div>\n\n      <!-- Question 11 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>11. What is a fundamental objective of the practical assignment described in Lesson 4?</h3>\n        <label><input type=\"radio\" name=\"q11\" value=\"A\"> A) Achieving mastery over advanced Cursor features</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"B\"> B) Learning Discord server administration and management</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"C\" data-correct=\"true\"> C) Strengthening understanding of workspace setup and tools</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"D\"> D) Becoming proficient in utilizing a wide range of AI research tools</label>\n      </div>\n\n      <!-- Question 12 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>12. In Lesson 4, which application are users instructed to configure with the auto-save functionality to prevent data loss?</h3>\n        <label><input type=\"radio\" name=\"q12\" value=\"A\"> A) Dropbox</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"B\"> B) Discord</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"C\"> C) Gemini</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"D\" data-correct=\"true\"> D) Cursor</label>\n      </div>\n\n      <!-- Question 13 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>13. What is the key deliverable to demonstrate to the team lead to confirm successful completion of the practical assignment setup?</h3>\n        <label><input type=\"radio\" name=\"q13\" value=\"A\"> A) Proper Yolo Mode activation and configuration</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"B\"> B) Successful integration with the team's Discord channel</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"C\" data-correct=\"true\"> C) Working file synchronization within the team's Dropbox folder</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"D\"> D) Comprehensive understanding of AI research tool applications</label>\n      </div>\n\n      <!-- Question 14 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>14. From whom should users obtain confirmation that their workspace setup is correctly configured as part of the practical assignment?</h3>\n        <label><input type=\"radio\" name=\"q14\" value=\"A\"> A) AI technical support</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"B\"> B) Dropbox customer service</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"C\"> C) Cursor help desk</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"D\" data-correct=\"true\"> D) Team lead</label>\n      </div>\n\n      <!-- Question 15 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>15. What is the recommended best practice for using AI tools to achieve in-depth and comprehensive research outcomes?</h3>\n        <label><input type=\"radio\" name=\"q15\" value=\"A\"> A) Master a single AI tool for all research tasks</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"B\"> B) Primarily rely on ChatGPT for comprehensive analysis and interpretation.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"C\"> C) Exclusively use Perplexity for verifying the factual accuracy of information.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"D\" data-correct=\"true\"> D) Use multiple tools in combination to leverage their diverse strengths</label>\n      </div>\n\n      <button id=\"submitBtn\" type=\"button\" onclick=\"calculateScore()\">Submit Exam</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ\n    let timer;\n    let seconds = 0;\n    const timeLimit = 300; // 5 –º–∏–Ω—É—Ç\n    const examName = \"How to work\";\n    let submissionDone = false; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏\n\n    // Fisher‚ÄìYates shuffle function\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n\n    // Randomize answer labels (excluding the user data block)\n    function randomizeAnswers() {\n      const questions = document.querySelectorAll('.question[data-points]:not([data-points=\"0\"])');\n      questions.forEach(question => {\n        const labels = Array.from(question.querySelectorAll('label'));\n        const shuffled = shuffle(labels);\n        shuffled.forEach(label => label.parentNode.removeChild(label));\n        const heading = question.querySelector('h3');\n        shuffled.forEach(label => heading.parentNode.appendChild(label));\n      });\n    }\n\n    function startQuiz() {\n      const titlePage = document.getElementById('titlePage');\n      const quizContainer = document.getElementById('quizContainer');\n      \n      if (titlePage && quizContainer) {\n        titlePage.classList.add('fade-out');\n        setTimeout(() => {\n          titlePage.style.display = 'none';\n          titlePage.classList.add('hidden');\n          quizContainer.classList.remove('hidden');\n          quizContainer.classList.add('fade-in');\n          quizContainer.style.display = 'block';\n          window.scrollTo(0, 0);\n          randomizeAnswers();\n          startTimer();\n        }, 500);\n      } else {\n        console.error('Elements not found: titlePage or quizContainer');\n      }\n    }\n\n    function startTimer() {\n      if (timer) { clearInterval(timer); }\n      seconds = timeLimit;\n      timer = setInterval(function() {\n        seconds--;\n        const minutes = Math.floor(seconds / 60);\n        const rem = seconds % 60;\n        const timerElement = document.getElementById('timer');\n        if (timerElement) {\n          timerElement.textContent = String(minutes).padStart(2, '0') + \":\" + String(rem).padStart(2, '0');\n        }\n        if (seconds <= 0) {\n          clearInterval(timer);\n          calculateScore(true);\n        }\n      }, 1000);\n    }\n\n    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∫–∞–∫ \"dd.mm.yyyy hh:mm\"\n    function formatDate(date) {\n      const options = {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false\n      };\n      const formatted = date.toLocaleString(\"en-GB\", options);\n      return formatted.replace(/\\//g, \".\").replace(\", \", \" \");\n    }\n\n    function calculateScore(timeout = false) {\n      if (submissionDone) return;\n      submissionDone = true;\n\n      const fullNameInput = document.querySelector('[name=\"fullName\"]');\n      const fullName = fullNameInput ? fullNameInput.value.trim() : \"\";\n      const namePattern = /^\\s*[A-Za-z–ê-–Ø–∞-—è–Å—ë]+\\s+[A-Za-z–ê-–Ø–∞-—è–Å—ë]+\\s*$/;\n      \n      if (!fullName && !timeout) {\n        alert(\"Please enter your name before submitting!\");\n        submissionDone = false;\n        return;\n      }\n      \n      if (!timeout && !namePattern.test(fullName)) {\n        alert(\"Please enter both your first and last name!\");\n        submissionDone = false;\n        return;\n      }\n      \n      const submitButton = document.getElementById('submitBtn');\n      if (submitButton) {\n        submitButton.style.display = 'none';\n      }\n      \n      if (timer) {\n        clearInterval(timer);\n      }\n      \n      let totalPoints = 0;\n      let maxPoints = 0;\n      const questions = document.querySelectorAll('.question');\n      \n      questions.forEach(function(question) {\n        const points = parseInt(question.dataset.points) || 1;\n        maxPoints += points;\n        if (points === 0) return;\n        \n        let correct = true;\n        const inputs = question.querySelectorAll('input');\n        let selectedValues = [];\n        let correctValues = [];\n        \n        inputs.forEach(function(inp) {\n          if (inp.checked) selectedValues.push(inp.value);\n          if (inp.dataset.correct === \"true\") correctValues.push(inp.value);\n        });\n        \n        if (\n          selectedValues.length !== correctValues.length ||\n          !selectedValues.every(function(val) { return correctValues.includes(val); })\n        ) {\n          correct = false;\n        }\n        \n        if (correct) {\n          totalPoints += points;\n          question.classList.add('correct');\n        } else {\n          question.classList.add('incorrect');\n        }\n      });\n      \n      const percentage = ((totalPoints / maxPoints) * 100).toFixed(1);\n      const timeUsed = Math.floor(seconds / 60) + \"m \" + (seconds % 60) + \"s\";\n      const resultDiv = document.getElementById('result');\n      \n      if (resultDiv) {\n        let resultsHTML = `\n          <h3>Exam Results</h3>\n          <p>Your score: ${totalPoints} / ${maxPoints} (${percentage}%)</p>\n          <p>Time used: ${timeUsed}</p>\n          ${percentage >= 80 ? \"Congratulations! You passed!\" : \"Try again! Review your mistakes below.\"}\n          ${timeout ? \"<p class='warning'>Time limit exceeded!</p>\" : \"\"}\n        `;\n        \n        resultsHTML += `\n          <button type=\"button\" onclick=\"location.reload()\">Retry</button>\n          <button type=\"button\" onclick=\"window.location.href='#'\">Read Again</button>\n          <button type=\"button\" id=\"taskButton\" onclick=\"loadTask()\">Task</button>\n        `;\n        \n        resultDiv.innerHTML = resultsHTML;\n        \n        const professionElement = document.querySelector('[name=\"profession\"]');\n        const recruiterElement = document.querySelector('[name=\"recruiter\"]');\n        \n        const profession = professionElement ? professionElement.value.trim() : \"\";\n        const recruiter = recruiterElement ? recruiterElement.value.trim() : \"\";\n        \n        const postData = {\n          fullName: fullName,\n          profession: profession,\n          recruiter: recruiter,\n          day: \"1\",  // –î–µ–Ω—å 1 –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n          examName: examName,\n          scoreObtained: totalPoints,\n          scoreTotal: maxPoints,\n          timeUsed: seconds,\n          timeTotal: timeLimit,\n          date: formatDate(new Date())\n        };\n        \n        try {\n          window.scrollTo({ top: 0, behavior: 'smooth' });\n          resultDiv.innerHTML += '<p>Sending results to server...</p>';\n          \n          fetch(\"https://auto.crm-s.com/webhook/Onboarding/Update\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json, text/plain, */*\"\n            },\n            body: JSON.stringify(postData),\n            mode: \"cors\"\n          })\n          .then(function(res) {\n            return res.text().then(function(text) {\n              console.log(\"POST response status:\", res.status);\n              console.log(\"POST response body:\", text);\n              \n              if (res.status === 200) {\n                resultDiv.innerHTML += '<p style=\"color: green;\">‚úì Results successfully sent to server!</p>';\n              } else {\n                resultDiv.innerHTML += '<p style=\"color: red;\">Error sending results to server: ' + res.status + '</p>';\n              }\n            });\n          })\n          .catch(function(err) {\n            console.error(\"Error in POST:\", err);\n            resultDiv.innerHTML += '<p style=\"color: red;\">Error sending results: ' + err.message + '</p>';\n          });\n        } catch (error) {\n          console.error(\"Error submitting quiz results:\", error);\n          resultDiv.innerHTML += '<p style=\"color: red;\">Error: ' + error.message + '</p>';\n        }\n      }\n    }\n\n    // loadTask() –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–∞ –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ.\n    function loadTask() {\n      const task = {\n        title: \"How to work\",\n        description: `# How to work Task\n\n## Overview\nThis task is designed to help you apply the principles from Lesson 1 on setting up your workspace and ensuring collaborative efficiency.\n\n## Instructions\n1. Review Lesson 1 content about workspace setup, Dropbox integration, and auto-save functionality.\n2. Create a flowchart or diagram that illustrates an optimal workspace setup, including how file synchronization and permissions are managed.\n3. Explain how this workflow improves team collaboration and minimizes data loss.\n\n## Outcome\nYour submission should clearly demonstrate your understanding of efficient workspace setup and demonstrate an actionable workflow.\nFeel free to use tools like Draw.io, Lucidchart, or Miro to design your diagram.`,\n        points: 30,\n        type: \"quiz\"\n      };\n\n      const taskMarkdown = `# üõ† Practice: Optimize Your Workspace Workflow\n\nIn this task, you will design a workflow that leverages effective workspace setup principles from Lesson 1 to enhance team collaboration and data security.\n\n# ‚úÖ Assignment: \n1. Outline a workflow that details how to set up your workspace for maximum efficiency and safety.\n   - Identify key triggers (e.g., file changes, updates in Dropbox permissions) that activate automated processes.\n   - Describe any AI tools or integrations you would use to monitor and manage these processes.\n   - Map out the data flow and process steps that ensure auto-save and synchronization.\n   - Explain how this workflow reduces the risk of data loss and improves team coordination.\n\n# ü§ñ Tools you can use: Draw.io, Lucidchart, Miro, or any similar tool to visualize your workflow.\n`;\n\n      const parsedMarkdown = parseMarkdown(taskMarkdown);\n      document.body.innerHTML = `\n        <div style=\"font-family: 'Open Sans', sans-serif; background: #F8F9FA; padding: 2rem; max-width: 800px; margin: 0 auto;\">\n          ${parsedMarkdown}\n          <div style=\"margin-top: 2rem;\">\n            <label for=\"taskLinkInput\" style=\"font-weight: bold;\">Optional link to your work:</label>\n            <input type=\"text\" id=\"taskLinkInput\" placeholder=\"https://app.napkin.ai/page/...\" style=\"width: 100%; padding: 8px; margin: 4px 0 1rem;\">\n            <input type=\"checkbox\" id=\"taskCompletedCheckbox\">\n            <label for=\"taskCompletedCheckbox\">Task Completed</label>\n          </div>\n        </div>\n      `;\n\n      const checkbox = document.getElementById(\"taskCompletedCheckbox\");\n      if (checkbox) {\n        checkbox.addEventListener(\"change\", function() {\n          if (checkbox.checked) {\n            const taskLinkInput = document.getElementById(\"taskLinkInput\");\n            const taskLink = taskLinkInput ? taskLinkInput.value.trim() : \"\";\n            checkbox.disabled = true;\n            const messageDiv = document.createElement('div');\n            messageDiv.innerHTML = '<p>Sending task completion to server...</p>';\n            document.body.appendChild(messageDiv);\n\n            try {\n              fetch(\"https://auto.crm-s.com/webhook/Onboarding/UpdateTaskTable\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Accept\": \"application/json, text/plain, */*\"\n                },\n                body: JSON.stringify({\n                  examName: \"How to work\",\n                  day: \"1\",  // –î–µ–Ω—å 1 –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n                  link: taskLink,\n                  date: formatDate(new Date())\n                }),\n                mode: \"cors\"\n              })\n              .then(function(res) {\n                return res.text().then(function(text) {\n                  console.log(\"Task completed webhook status:\", res.status);\n                  console.log(\"Task completed webhook body:\", text);\n\n                  if (res.status === 200) {\n                    messageDiv.innerHTML = '<p style=\"color: green; font-weight: bold;\">‚úì Task completion successfully sent to server!</p>';\n                  } else {\n                    messageDiv.innerHTML = '<p style=\"color: orange; font-weight: bold;\">Task marked as complete, but server returned status: ' + res.status + '</p>';\n                  }\n                });\n              })\n              .catch(function(err) {\n                console.error(\"Error sending task completed webhook:\", err);\n                messageDiv.innerHTML = '<p style=\"color: red; font-weight: bold;\">Error sending task completion: ' + err.message + '</p>';\n                alert(\"Your task has been marked as complete, but there was an issue connecting to the server. Your instructor will be notified.\");\n              });\n            } catch (error) {\n              console.error(\"Error marking task as complete:\", error);\n              messageDiv.innerHTML = '<p style=\"color: red; font-weight: bold;\">Error: ' + error.message + '</p>';\n              alert(\"Your task has been marked as complete, but there was an issue connecting to the server. Your instructor will be notified.\");\n            }\n          }\n        });\n      }\n    }\n\n    function parseMarkdown(markdownText) {\n      const lines = markdownText.split('\\n');\n      let html = \"\";\n      const stack = [];\n      \n      lines.forEach(function(line) {\n        const match = line.match(/^(#{1,4})\\s+(.*)/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          \n          while (stack.length && stack[stack.length - 1] >= level) {\n            html += \"</details>\";\n            stack.pop();\n          }\n          \n          html += `<details><summary>${text}</summary>`;\n          stack.push(level);\n        } else {\n          html += line + \"<br>\";\n        }\n      });\n      \n      while (stack.length) {\n        html += \"</details>\";\n        stack.pop();\n      }\n      \n      return html;\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      const startExamBtn = document.getElementById(\"startExamBtn\");\n      if (startExamBtn) {\n        startExamBtn.addEventListener(\"click\", startQuiz);\n      }\n    });\n  </script>\n</body>\n</html>\n",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        220,
        0
      ],
      "id": "d2034351-77c1-44c7-9488-bd91a94123b3",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "955c7b74-af5f-41c6-a145-7e7b15d60d78",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bce7fa653659e581ce25e9a76408cecc1db830bd4c16d1cddb638823b7bca87a"
  },
  "id": "yreF3UY2Nb1kTCTT",
  "tags": [
    {
      "createdAt": "2025-03-03T09:45:59.203Z",
      "updatedAt": "2025-03-03T09:45:59.203Z",
      "id": "Fm7JeKGvgj23tI31",
      "name": "Tests"
    },
    {
      "createdAt": "2025-02-28T12:15:59.970Z",
      "updatedAt": "2025-02-28T12:15:59.970Z",
      "id": "sdWf5s6naE3QVMN8",
      "name": "Onboarding"
    }
  ]
}